import { type NextPage } from "next";
import Head from "next/head";
import { signIn, useSession } from "next-auth/react";
import { League_Spartan } from "next/font/google";
import { useRef, useState } from "react";
import { z, type ZodError } from "zod";
import LoadIndicator from "~/components/LoadIndicator";
import Image from "next/image";
import { useRouter } from "next/router";

const spartan = League_Spartan({
  weight: ["400", "500", "700"],
  subsets: ["latin"],
  variable: "--font-spartan",
});

const Home: NextPage = () => {
  const { status } = useSession();
  const router = useRouter();
  const emailRef = useRef<HTMLInputElement>(null);
  const [error, setError] = useState("");
  const [loading, setLoading] = useState(false);

  if (status === "loading") {
    return (
      <div className="absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2">
        <LoadIndicator />
      </div>
    );
  }

  if (status === "authenticated") {
    return <span>Logged in</span>;
    // void router.push("/invoice");
    // return null;
  }

  function emailLoginHandler() {
    const input = emailRef.current?.value;
    const result = z.coerce.string().email().safeParse(input);
    console.log(result.success);
    if (result.success) {
      setLoading(true);
      void signIn("email", { email: input });
    } else {
      const errors = JSON.parse(result.error.message) as Array<ZodError>;
      let message = "";
      errors.forEach((err) => (message = err.message + " "));

      setError(message);
    }
  }

  function onEmailFocusHandler() {
    if (error) setError("");
  }

  return (
    <>
      <Head>
        <title>Invoices</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={`${spartan.variable} font-sans`}>
        <h1 id="title" className="mb-16 pt-32 text-center text-5xl">
          Sign in to{" "}
          <mark className="bg-transparent text-primary-100">Invoices</mark>{" "}
          Manager
        </h1>
        {loading ? (
          <div
            className="mx-auto flex max-w-md justify-center
          px-2"
          >
            <LoadIndicator />
          </div>
        ) : (
          <div className="mx-auto max-w-md px-2">
            <button
              id="google-login"
              className="flex w-full items-center justify-center gap-x-4 rounded border-4 border-primary-100 px-3 py-2 text-2xl text-primary-100  hover:shadow-lg"
              onClick={() =>
                void signIn("google", {
                  callbackUrl: `${window.location.origin}/invoice`,
                })
              }
            >
              <Image
                src={"/assets/icon-ms.svg"}
                width="24"
                height="24"
                alt="microsoft logo"
              />
              <span>Sign In With Google</span>
            </button>
            <div className="flex items-center gap-x-2 py-6">
              <span className="h-[0.0625rem] w-full bg-neutral-400"></span>
              <span className="text-lg text-neutral-400">or</span>
              <span className="h-[0.0625rem] w-full bg-neutral-400"></span>
            </div>
            <div className="flex flex-col rounded">
              <div className="relative">
                <input
                  onFocus={onEmailFocusHandler}
                  ref={emailRef}
                  className={`w-full rounded border border-neutral-400 bg-transparent py-3  px-5 text-xl  focus:border-primary-100 ${
                    error ? "border-accent-100" : ""
                  }`}
                  type={"text"}
                  placeholder="name@email.com"
                  data-testid="email-input"
                />
                {error ? (
                  <span className="absolute bottom-full left-0 text-sm text-accent-100">
                    {error}
                  </span>
                ) : null}
              </div>
              <button
                data-testid="email-btn"
                onClick={emailLoginHandler}
                className="mt-4 flex w-full items-center justify-center gap-x-4  rounded bg-primary-100 px-3 py-2 text-2xl  text-white hover:shadow-lg"
              >
                Sign In With Email
              </button>
              <p className="mt-4 rounded bg-neutral-800 py-2 px-6 font-normal">
                You will receive magic link for a password-free sign in.
              </p>
            </div>
          </div>
        )}
      </main>
    </>
  );
};

export default Home;
